#
# This file is used to declare the list of libraries
# which are used as dependencies in the project.
# See https://docs.gradle.org/7.4.2/userguide/platforms.html#sub:central-declaration-of-dependencies
#
# For Micronaut, we have 3 kinds of dependencies:
#   - managed dependencies, which are exposed to consumers via a BOM (or version catalog)
#   - managed BOMs, which are imported into the BOM that we generate
#   - all other dependencies, which are implementation details
#
# If a library needs to appear in the BOM of the project, then it must be
# declared with the "managed-" prefix.
# If a BOM needs to be imported in the BOM of the project, then it must be
# declared with the "boms-" prefix.
# Both managed dependencies and BOMs need to have their version declared via
# a managed version (a version which alias starts with "managed-"

[versions]
micronaut = "4.0.0-SNAPSHOT"
micronaut-docs = "2.0.0"
micronaut-test = "3.1.1"
micronaut-gradle-plugin = "3.6.5"
groovy = "4.0.6"
spock = "2.2-groovy-4.0"
vertx-client = "4.3.2"

# Managed versions appear in the BOM
managed-testcontainers = "1.17.6"

[libraries]
boms-testcontainers = { module = "org.testcontainers:testcontainers-bom", version.ref = "managed-testcontainers" }

testcontainers-core = { module = "org.testcontainers:testcontainers", version = "" }
testcontainers-elasticsearch = { module = "org.testcontainers:elasticsearch", version = "" }
testcontainers-jdbc = { module = "org.testcontainers:jdbc", version = "" }
testcontainers-hivemq = { module = "org.testcontainers:hivemq", version = "" }
testcontainers-kafka = { module = "org.testcontainers:kafka", version = "" }
testcontainers-mariadb = { module = "org.testcontainers:mariadb", version = "" }
testcontainers-mongodb = { module = "org.testcontainers:mongodb", version = "" }
testcontainers-mssql = { module = "org.testcontainers:mssqlserver", version = "" }
testcontainers-mysql = { module = "org.testcontainers:mysql", version = "" }
testcontainers-neo4j = { module = "org.testcontainers:neo4j", version = "" }
testcontainers-oracle-xe = { module = "org.testcontainers:oracle-xe", version = "" }
testcontainers-postgres = { module = "org.testcontainers:postgresql", version = "" }
testcontainers-rabbitmq = { module = "org.testcontainers:rabbitmq", version = "" }
testcontainers-r2dbc = { module = "org.testcontainers:r2dbc", version = "" }
testcontainers-vault = { module = "org.testcontainers:vault", version = "" }

mariadb = { module = "org.mariadb.jdbc:mariadb-java-client", version = "" }
mongodb = { module = "org.mongodb:mongodb-driver-sync", version = "" }
mssql = { module = "com.microsoft.sqlserver:mssql-jdbc", version = "" }
mysql = { module = "mysql:mysql-connector-java", version = "" }
oracle-xe = { module = "com.oracle.database.jdbc:ojdbc8", version = "" }
postgres = { module = "org.postgresql:postgresql", version = "" }

reactive-mariadb = { module = "org.mariadb:r2dbc-mariadb", version = "" }
reactive-mssql = { module = "io.r2dbc:r2dbc-mssql", version = "" }
reactive-mysql = { module = "dev.miku:r2dbc-mysql", version = "" }
reactive-oracle-xe = { module = "com.oracle.database.r2dbc:oracle-r2dbc", version = "" }
reactive-pool = { module = "io.r2dbc:r2dbc-pool", version = "" }
reactive-postgres = { module = "org.postgresql:r2dbc-postgresql", version = "" }

vertx-mysql = { module = "io.vertx:vertx-mysql-client", version.ref = "vertx.client" }
vertx-mssql = { module = "io.vertx:vertx-mssql-client", version.ref = "vertx.client" }
vertx-postgres = { module = "io.vertx:vertx-pg-client", version.ref = "vertx.client" }
vertx-oracle = { module = "io.vertx:vertx-oracle-client", version.ref = "vertx.client" }
scram = { module = "com.ongres.scram:client", version = "2.1" }

#
# Managed dependencies appear in the BOM
#
# managed-somelib = { module = "group:artifact", version.ref = "managed-somelib" }

#
# Imported BOMs, also appearing in the generated BOM
#
# boms-somebom = { module = "com.foo:somebom", version.ref = "managed-somebom" }

# Other libraries used by the project but non managed

# micronaut-bom = { module = "io.micronaut:micronaut-bom", version.ref = "micronaut" }
# jdoctor = { module = "me.champeau.jdoctor:jdoctor-core", version.ref="jdoctor" }

[bundles]

[plugins]
micronaut-miniapp = { id = "io.micronaut.minimal.application", version.ref = "micronaut-gradle-plugin" }
micronaut-aot = { id = "io.micronaut.aot", version.ref = "micronaut-gradle-plugin" }
